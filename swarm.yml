---
# determine the status of the manager node
- hosts: manager[0]
  become: true
  tasks:
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm: ' | cut -d ' ' -f2
      register: swarm_status

# determine the status of each worker node
- hosts: worker
  become: true
  tasks:
    - name: determine swarm status
      shell: >
        docker info | egrep '^Swarm: ' | cut -d ' ' -f2
      register: swarm_status

# Initialize the swarm cluster on the manager node
- hosts: manager[0]
  become: true
  tasks:
    - name: initialize swarm cluster
      shell: >
        docker swarm init

# retrieve the swarm tokens and populate a list of ips listening on
# the swarm port 2377      
- hosts: os_hosts
  become: true
  tasks:
    - name: Get the worker join-token.
      shell: docker swarm join-token -q manager
      changed_when: False
      register: swarm_worker_token
      delegate_to: "{{ groups['manager'][0] }}"
      delegate_facts: True
      when: "'worker' in group_names"

    - name: join worker nodes to cluster
      shell: >
        docker swarm join
        --token={{ swarm_worker_token.stdout }}
        {{ groups['manager'][0] }}:2377
      changed_when: False
      when: "'worker' in group_names"   

# Deploy the Web services to the swarm cluster
- hosts: manager[0]
  become: true
  tasks:
    - name: Deploy service
      shell: docker stack deploy --compose-file /home/ubuntu/api/docker-compose.yml eb   